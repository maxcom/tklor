Предложение: добавить линейный режим просмотра, причём без списка сообщений, просто сообщения подряд.

отправка сообщений из клиента[done] + автоквотинг[done] + анонимный постинг с отображением капчи

постинг на lorquotes :)

работа с tile 0.7.8 ?

постинг: добавление шаблонов("для труѣ", "корованы" и т.д.)

О, ещё фичреквест: вроде Оперовской "fit to width", чтобы preformatted посты широкие всегда укладывались в экран.

Кстати, а вот что было бы реально сытной фичей - это заточить такое под n8х0... Но это надо переписывать заново - tcl там вроде как нет.
Вот ведь... "Заточить" - в данном случае означает модифицировать интерфейс с целью обеспечения максимального удобства на тачскрине при заданном фиксированном разрешении. В идеале - чтобы интерфейс выглядил "родным" на соотв. устройстве.

[model] Загрузка сообщений в память не полностью, а только отображаемых заголовков.
Это тянет за собой переписывание алгоритма кеширования, создание индексов для записей.
Можно будет реализовать установку флага "прочитано" без пересоздания всего файла кеша заново.

возможность просмотра последних сообщений (http://www.linux.org.ru/tracker.jsp)

модная тёмная тема

+просмотр неподтверждённых и пасхальные яички :-)

спеллчекер

[лор не поддерживает сжатие, отсутствует либа для распаковки] gzip при скачивании файлов

поиск по лору

для внутрилоровских ссылок: переход внутри клиента + навигация <-/->

[не получается] add 3-state items instead of checkbuttons in font configuration

описать LOR API на основе XML-RPC

сделать возможность настраивать биндинги из менюшки или конфигов

Добавить список последних тем, в которые я ходил и писал.

зарефакторить работу с конфигами(через модель). определять как-то так:
config {
    category "category name" {
        combo "Combo title" -values {val1 val2 val3} -value val1 -setScript script -readonly 1
        int "title" -getScript script1 -setScript script2
        string "some string" -variable someString
    }
}
добавить возможность сохранять это дело в файл и доставать оттуда а также прикрутить к конфиг-диалогам

использовать MVC для работы со списками:
унаследовать класс treewidget и засунуть в него все функции работы с деревом

defCallbackLambda как-то странно работает, если у функции 0 параметров

сделать в режиме debug все вызовы синхронными

!!! течёт память из-за установки значения чекбоксов через set на widget pathname

А, во, нужен был tcllib >=1.10. Автор, поправь, пожалуйста, ебилд, чтобы он зависел от >=dev-tcltk/tcllib-1.10.

Хочется настройки для автообновления, с указанием интервала через который обновлять

>> Еще очень хотелось бы иметь возможность скоринга. Хотя бы базовую. Отмечать треды, чтоб потом не искать каждый раз.
> растолкуй, а то я не совсем понимаю о чём речь
Ну вот к примеру, меня интересует какая-то цепочка обсуждений в пределах какой-то новости. Чтобы ее можно было отметить как "интересующую". И эта цепочка будет всегда отображаться перед остальными. А скоринг в полном смысле этого слова - это выделение цепочек по присутствию в заголовке интересующих слов (по regexp). То есть в идеале "интересноть" имеет численное значение. Треды с наибольшим значением инетересноти идут в начале.
Как одна из возможностей следует та, что все треды, в которых имеются сообщения адресованные мне, показываются в первую очередь.

Вообще неплохо было бы сделать цветовое различие "нет новых сообщений в ветке -есть новое сообщение(я) - вся ветка состоит из новых сообщений"

Копирование ссылок.

ники -- выделять жирным или кидать вниз сообщения.

Аватары.

Можно ещё получать HEAD-запросом дату последнего изменения страницы.