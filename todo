Предложение: добавить линейный режим просмотра, причём без списка сообщений, просто сообщения подряд.

отправка сообщений из клиента[done] + автоквотинг[done] + анонимный постинг с отображением капчи

постинг на lorquotes :)

работа с tile 0.7.8 ?

постинг: добавление шаблонов("для труѣ", "корованы" и т.д.)

О, ещё фичреквест: вроде Оперовской "fit to width", чтобы preformatted посты широкие всегда укладывались в экран.

Кстати, а вот что было бы реально сытной фичей - это заточить такое под n8х0... Но это надо переписывать заново - tcl там вроде как нет.
Вот ведь... "Заточить" - в данном случае означает модифицировать интерфейс с целью обеспечения максимального удобства на тачскрине при заданном фиксированном разрешении. В идеале - чтобы интерфейс выглядил "родным" на соотв. устройстве.

[model] Загрузка сообщений в память не полностью, а только отображаемых заголовков.
Это тянет за собой переписывание алгоритма кеширования, создание индексов для записей.
Можно будет реализовать установку флага "прочитано" без пересоздания всего файла кеша заново.

возможность просмотра последних сообщений (http://www.linux.org.ru/tracker.jsp)

модная тёмная тема

+просмотр неподтверждённых и пасхальные яички :-)

спеллчекер

[лор не поддерживает сжатие, отсутствует либа для распаковки] gzip при скачивании файлов

сделать нормальный aboutbox

поиск по лору

для внутрилоровских ссылок: переход внутри клиента + навигация <-/->

[не получается] add 3-state items instead of checkbuttons in font configuration

описать LOR API на основе XML-RPC

сделать возможность настраивать биндинги из менюшки или конфигов

Добавить список последних тем, в которые я ходил и писал.

зарефакторить работу с конфигами(через модель). определять как-то так:
config {
    category "category name" {
        combo "Combo title" -values {val1 val2 val3} -value val1 -setScript script -readonly 1
        int "title" -getScript script1 -setScript script2
        string "some string" -variable someString
    }
}
добавить возможность сохранять это дело в файл и доставать оттуда а также прикрутить к конфиг-диалогам

использовать MVC для работы со списками:
унаследовать класс treewidget и засунуть в него все функции работы с деревом

проверить переменные, которые не были unset после использования

возможность вызова консольки

defCallbackLambda как-то странно работает, если у функции 0 параметров

сделать в режиме debug все вызовы синхронными

перепосылка "обломившихся" сообщений
